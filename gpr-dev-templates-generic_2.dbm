<?xml version="1.0" encoding="UTF-8"?>
<!--
CAUTION: Do not modify this file unless you know what you are doing.
         Unexpected results may occur if the code is changed deliberately.
-->
<dbmodel pgmodeler-ver="0.8.2-beta1" last-position="1358,456" last-zoom="1.1"
	 default-schema="public" default-owner="postgres">
<role name="super_user"
      superuser="true"
      createdb="true"
      replication="true"
      createrole="true"
      inherit="true"
      encrypted="true"
      password="********">
</role>

<role name="alfresco_user"
      inherit="true"
      encrypted="true"
      password="********">
	<roles names="super_user" role-type="member" />
</role>

<role name="jasperdb"
      inherit="true"
      login="true"
      encrypted="true"
      password="********">
</role>

<role name="gpr_lookup_maintainer"
      inherit="true"
      encrypted="true"
      password="********">
	<roles names="super_user" role-type="member" />
</role>

<database name="gpr-dev" encoding="UTF8" lc-collate="en_ZA" lc-ctype="en_ZA">
	<role name="postgres"/>
	<tablespace name="pg_default"/>
</database>

<schema name="public" fill-color="#e1e1e1" sql-disabled="true">
</schema>

<schema name="basic_auth" rect-visible="true" fill-color="#8ba600">
	<role name="postgres"/>
</schema>

<extension name="json_build" cur-version="1.0.0">
	<schema name="public"/>
	<comment><![CDATA[json_build extension]]></comment>
</extension>

<extension name="pgcrypto" cur-version="1.0">
	<schema name="public"/>
	<comment><![CDATA[cryptographic functions]]></comment>
</extension>

<extension name="uuid-ossp" cur-version="1.0">
	<schema name="public"/>
	<comment><![CDATA[generate universally unique identifiers (UUIDs)]]></comment>
</extension>

<usertype name="jwt_claims" configuration="composite">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<typeattrib name="role">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="email">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="exp">
		<type name="integer"/>
	</typeattrib>
</usertype>

<usertype name="token_type_enum" configuration="enumeration">
	<schema name="public"/>
	<role name="postgres"/>
	<enumeration values="validation,reset"/>
</usertype>

<function name="check_role_exists"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
begin
  if not exists (select 1 from pg_roles as r where r.rolname = new.role) then
    raise foreign_key_violation using message =
      'unknown database role: ' || new.role;
    return null;
  end if;
  return new;
end
]]></definition>
</function>

<function name="clearance_for_role"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="u">
		<type name="name"/>
	</parameter>
	<definition><![CDATA[
declare
  ok boolean;
begin
  select exists (
    select rolname
      from pg_authid
     where pg_has_role(current_user, oid, 'member')
       and rolname = u
  ) into ok;
  if not ok then
    raise invalid_password using message =
      'current user not member of role ' || u;
  end if;
end
]]></definition>
</function>

<function name="current_email"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="text"/>
	</return-type>
	<definition><![CDATA[
begin
  return current_setting('postgrest.claims.email');
exception
  -- handle unrecognized configuration parameter error
  when undefined_object then return '';
end;
]]></definition>
</function>

<function name="encrypt_pass"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
begin
  if tg_op = 'INSERT' or new.pass <> old.pass then
    new.pass = crypt(new.pass, gen_salt('bf'));
  end if;
  return new;
end
]]></definition>
</function>

<function name="send_validation"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
declare
  tok uuid;
begin
  select uuid_generate_v4() into tok;

  insert into basic_auth.tokens (token, token_type, email)
         values (tok, 'validation', new.email);

  insert into public.email_notifications 
		(email_to, subject, body, token_email, token, token_type)
         values (new.email,'New User Validation','Follow Link Below to Validate New Account:',true,tok,'validation');
 		
  --perform pg_notify('validate',
    --json_build_object(
      --'email', new.email,
      --'token', tok,
      --'token_type', 'validation'
    --)::text
  --);
  return new;
end
]]></definition>
</function>

<function name="user_role"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="name"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<parameter name="pass">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
begin
  return (
  select role from basic_auth.users
   where users.email = user_role.email
     and users.pass = crypt(user_role.pass, users.pass)
     and users.verified = true
  );
end;
]]></definition>
</function>

<sequence name="call_application_statuses_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="call_application_statuses">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The status of a call application.]]></comment>
	<position x="50" y="50"/>
	<column name="id" not-null="true" sequence="public.call_application_statuses_id_seq">
		<type name="integer"/>
	</column>
	<column name="status" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="call_application_statuses_pkey" type="pk-constr" table="public.call_application_statuses">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="call_application_statuses_status_uq" type="uq-constr" table="public.call_application_statuses">
		<columns names="status" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="call_applications_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="call_applications">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A call application is a response to a call from an organisation.]]></comment>
	<position x="410.078" y="50"/>
	<column name="id" not-null="true" sequence="public.call_applications_id_seq">
		<type name="integer"/>
	</column>
	<column name="call">
		<type name="integer"/>
	</column>
	<column name="amount">
		<type name="money"/>
	</column>
	<column name="applicant">
		<type name="integer"/>
	</column>
	<column name="place">
		<type name="integer"/>
	</column>
	<column name="comments">
		<type name="text"/>
	</column>
	<column name="application_status">
		<type name="integer"/>
	</column>
	<column name="score">
		<type name="integer"/>
	</column>
	<column name="title">
		<type name="text"/>
	</column>
	<column name="pmu_advisory">
		<type name="text"/>
	</column>
	<constraint name="call_applications_pkey" type="pk-constr" table="public.call_applications">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="rpc_alfresco_change_application_status">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="272.344" y="2104.2"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id AS "projectId",
    call_applications.id AS "projectCode",
    call_applications.title AS "projectTitle",
    call_application_statuses.status AS "projectStatusCode"
   FROM (call_applications
     LEFT JOIN call_application_statuses ON ((call_applications.application_status = call_application_statuses.id)));]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_change_application_status" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="projectId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectCode">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectTitle">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="projectStatusCode">
		<type name="character varying" length="255"/>
	</typeattrib>
</usertype>

<function name="alfresco_change_application_status"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="1000">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_change_application_status"/>
	</return-type>
	<parameter name="projectCode">
		<type name="text"/>
	</parameter>
	<parameter name="newStatusCode">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable  
DECLARE project_code INTEGER;
BEGIN	
	SET ROLE postgres;
	
        SELECT call_applications.id INTO project_code
        FROM call_applications
        WHERE call_applications.id = alfresco_change_application_status."projectCode"::int;


        IF project_code IS NULL THEN
		RAISE EXCEPTION 'Application does not Exist!';
        END IF;


        UPDATE call_applications SET (application_status) = (alfresco_change_application_status."newStatusCode"::int)
        WHERE call_applications.id = project_code;         

        RETURN QUERY SELECT * FROM rpc_alfresco_change_application_status 
	WHERE  rpc_alfresco_change_application_status."projectId" = project_code;
		       
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;]]></definition>
</function>

<sequence name="calls_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="calls">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A call is a request for project proposals to support a KPI.]]></comment>
	<position x="687.297" y="50"/>
	<column name="id" not-null="true" sequence="public.calls_id_seq">
		<type name="integer"/>
	</column>
	<column name="call_reference" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="call_date">
		<type name="date"/>
	</column>
	<column name="evaluation_date">
		<type name="date"/>
	</column>
	<column name="key_performance_indicator">
		<type name="integer"/>
	</column>
	<column name="admin_compliance_template">
		<type name="integer"/>
	</column>
	<column name="relevance_compliance_template">
		<type name="integer"/>
	</column>
	<column name="assessment_compliance_template">
		<type name="integer"/>
	</column>
	<column name="due_diligence_compliance_template">
		<type name="integer"/>
	</column>
	<constraint name="calls_call_reference_uq" type="uq-constr" table="public.calls">
		<columns names="call_reference" ref-type="src-columns"/>
	</constraint>
	<constraint name="calls_pkey" type="pk-constr" table="public.calls">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="key_performance_indicators_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="key_performance_indicators">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A key performance indicator (KPI) is a measure of progress in a KRA.]]></comment>
	<position x="1198.36" y="50"/>
	<column name="id" not-null="true" sequence="public.key_performance_indicators_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="reporting_period">
		<type name="text"/>
	</column>
	<column name="baseline">
		<type name="text"/>
	</column>
	<column name="remarks">
		<type name="text"/>
	</column>
	<column name="status">
		<type name="text"/>
	</column>
	<column name="key_result_area">
		<type name="integer"/>
	</column>
	<constraint name="key_performance_indicators_code_uq" type="uq-constr" table="public.key_performance_indicators">
		<columns names="code,key_result_area" ref-type="src-columns"/>
	</constraint>
	<constraint name="key_performance_indicators_pkey" type="pk-constr" table="public.key_performance_indicators">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="key_result_areas_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="key_result_areas">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A key result area (KRA) is a component of a programme.]]></comment>
	<position x="1591.36" y="50"/>
	<column name="id" not-null="true" sequence="public.key_result_areas_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="programme">
		<type name="integer"/>
	</column>
	<constraint name="key_result_areas_code_uq" type="uq-constr" table="public.key_result_areas">
		<columns names="code,programme" ref-type="src-columns"/>
	</constraint>
	<constraint name="key_result_areas_pkey" type="pk-constr" table="public.key_result_areas">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="organisations_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="organisations">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[An organisation is an institution that operates in the sector.]]></comment>
	<position x="50" y="277.4"/>
	<column name="id" not-null="true" sequence="public.organisations_id_seq">
		<type name="integer"/>
	</column>
	<column name="code">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="web_site">
		<type name="character varying" length="255"/>
	</column>
	<column name="vat_no">
		<type name="character varying" length="255"/>
	</column>
	<column name="npo_no">
		<type name="character varying" length="255"/>
	</column>
	<column name="cell_phone">
		<type name="character varying" length="255"/>
	</column>
	<column name="work_phone">
		<type name="character varying" length="255"/>
	</column>
	<column name="email_address">
		<type name="character varying" length="255"/>
	</column>
	<column name="fax_no">
		<type name="character varying" length="255"/>
	</column>
	<column name="street_first_line">
		<type name="character varying" length="255"/>
	</column>
	<column name="street_second_line">
		<type name="character varying" length="255"/>
	</column>
	<column name="postal_first_line">
		<type name="character varying" length="255"/>
	</column>
	<column name="postal_second_line">
		<type name="character varying" length="255"/>
	</column>
	<column name="suburb">
		<type name="integer"/>
	</column>
	<column name="place">
		<type name="integer"/>
	</column>
	<column name="province">
		<type name="integer"/>
	</column>
	<column name="referee">
		<type name="integer"/>
	</column>
	<column name="auditor">
		<type name="integer"/>
	</column>
	<column name="organisation_type">
		<type name="integer"/>
	</column>
	<column name="organisation_status">
		<type name="integer"/>
	</column>
	<column name="pts_assocode">
		<type name="text"/>
	</column>
	<column name="contact_person">
		<type name="character varying" length="50"/>
	</column>
	<constraint name="organisation_code_uq" type="uq-constr" table="public.organisations">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="organisations_pkey" type="pk-constr" table="public.organisations">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="programmes_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="programmes">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A programme is a group of projects that have a common outcome.]]></comment>
	<position x="456.266" y="277.4"/>
	<column name="id" not-null="true" sequence="public.programmes_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="start_date">
		<type name="date"/>
	</column>
	<column name="end_date">
		<type name="date"/>
	</column>
	<constraint name="programmes_code_uq" type="uq-constr" table="public.programmes">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="programmes_pkey" type="pk-constr" table="public.programmes">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="suburbs_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="suburbs">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A suburb is part of a place with a Street and PO Box code, as defined by SAPO.]]></comment>
	<position x="816.344" y="277.4"/>
	<column name="id" not-null="true" sequence="public.suburbs_id_seq">
		<type name="integer"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="po_box_code">
		<type name="character varying" length="50"/>
	</column>
	<column name="street_code">
		<type name="character varying" length="50"/>
	</column>
	<column name="latitude">
		<type name="real"/>
	</column>
	<column name="longitude">
		<type name="real"/>
	</column>
	<column name="province">
		<type name="integer"/>
	</column>
	<column name="place">
		<type name="integer"/>
	</column>
	<constraint name="suburbs_pkey" type="pk-constr" table="public.suburbs">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="rpc_alfresco_get_organisations">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="637.975" y="2104.2"/>
	<reference>
		<expression><![CDATA[ SELECT organisations.id AS "organisationId",
    organisations.code AS "organisationCode",
    organisations.name AS "organisationName",
    ''::text AS "organisationContactFullName",
    organisations.cell_phone AS "organisationContactCellPhoneNumer",
    organisations.email_address AS "organisationEmailAddress",
    organisations.work_phone AS "organisationTelephoneNumber",
    organisations.fax_no AS "organisationFaxNumber",
    (((((organisations.street_first_line)::text || ', '::text) || (organisations.street_second_line)::text) || ', '::text) || (suburbs.street_code)::text) AS "organisationPhysicalAddress",
    (((((organisations.postal_first_line)::text || ', '::text) || (organisations.postal_second_line)::text) || ', '::text) || (suburbs.po_box_code)::text) AS "organisationPostalAddress"
   FROM (organisations
     LEFT JOIN suburbs ON ((organisations.suburb = suburbs.id)))
  ORDER BY organisations.name;]]></expression>
	</reference>
</view>

<view name="rpc_alfresco_create_application">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="945.856" y="2104.2"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id AS "projectId",
    call_applications.id AS "projectCode",
    call_applications.title AS "projectTitle",
    programmes.id AS "programmeId",
    programmes.code AS "programmeCode",
    programmes.name AS "programmeName",
    calls.id AS "callId",
    calls.call_reference AS "callCode",
    calls.name AS "callName",
    rpc_alfresco_get_organisations."organisationId",
    rpc_alfresco_get_organisations."organisationCode",
    rpc_alfresco_get_organisations."organisationName",
    rpc_alfresco_get_organisations."organisationContactFullName",
    rpc_alfresco_get_organisations."organisationContactCellPhoneNumer",
    rpc_alfresco_get_organisations."organisationEmailAddress",
    rpc_alfresco_get_organisations."organisationTelephoneNumber",
    rpc_alfresco_get_organisations."organisationFaxNumber",
    rpc_alfresco_get_organisations."organisationPhysicalAddress",
    rpc_alfresco_get_organisations."organisationPostalAddress"
   FROM (((((call_applications
     LEFT JOIN calls ON ((call_applications.call = calls.id)))
     LEFT JOIN key_performance_indicators ON ((key_performance_indicators.id = calls.key_performance_indicator)))
     LEFT JOIN key_result_areas ON ((key_performance_indicators.key_result_area = key_result_areas.id)))
     LEFT JOIN programmes ON ((key_result_areas.programme = programmes.id)))
     JOIN rpc_alfresco_get_organisations ON ((call_applications.applicant = rpc_alfresco_get_organisations."organisationId")));]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_create_application" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="projectId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectCode">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectTitle">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="programmeId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="programmeCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="programmeName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="callId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="callCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="callName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="organisationCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="organisationName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationContactFullName">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationContactCellPhoneNumer">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationEmailAddress">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationTelephoneNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationFaxNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationPhysicalAddress">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationPostalAddress">
		<type name="text"/>
	</typeattrib>
</usertype>

<function name="alfresco_create_application"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="1000">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_create_application"/>
	</return-type>
	<parameter name="projectCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="projectTitle" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="callCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable  
DECLARE project_code INTEGER;
BEGIN	
	SET ROLE postgres;
	
        SELECT call_applications.id INTO project_code
        FROM call_applications
        WHERE call_applications.id = alfresco_create_application."projectCode"::int;


        IF project_code IS NULL THEN
		RAISE EXCEPTION 'Application does not Exist!';
        END IF;


        UPDATE call_applications SET (title,applicant) = (
        COALESCE("projectTitle",call_applications.title),
        COALESCE(alfresco_create_application."organisationCode"::int,call_applications.title))

        WHERE call_applications.id = project_code;         

        RETURN QUERY SELECT * FROM rpc_alfresco_create_application 
	WHERE  rpc_alfresco_create_application."projectId" = project_code;
		       
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;]]></definition>
</function>

<view name="rpc_alfresco_create_application_code">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1257.24" y="2104.2"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id AS "projectCode"
   FROM call_applications;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_create_application_code" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="projectCode">
		<type name="integer"/>
	</typeattrib>
</usertype>

<function name="alfresco_create_application_code"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="1000">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_create_application_code"/>
	</return-type>
	<parameter name="callCode">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
DECLARE project_code INTEGER;
DECLARE call_id INTEGER;
BEGIN	
	SET ROLE postgres;
	
        SELECT calls.id INTO call_id
        FROM calls
        WHERE calls.call_reference = "callCode";

        IF call_id IS NULL THEN
		RAISE EXCEPTION 'Call Code Invalid';
        END IF;
 
        INSERT INTO call_applications (call) VALUES (call_id) 
        RETURNING call_applications.id INTO project_code;

        RETURN QUERY SELECT * FROM rpc_alfresco_create_application_code 
	WHERE  rpc_alfresco_create_application_code."projectCode" = project_code;
		       
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;]]></definition>
</function>

<usertype name="rpc_alfresco_get_organisations" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="organisationId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="organisationCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="organisationName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationContactFullName">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationContactCellPhoneNumer">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationEmailAddress">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationTelephoneNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationFaxNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationPhysicalAddress">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationPostalAddress">
		<type name="text"/>
	</typeattrib>
</usertype>

<function name="alfresco_create_organisation"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="1000">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_organisations"/>
	</return-type>
	<parameter name="organisationName" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationContactFullName" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationContactCellPhoneNumber" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationEmailAddress" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationTelephoneNumber" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationFaxNumber" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationPhysicalAddressLine1" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationPhysicalAddressLine2" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationPostalAddressLine1" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationPostalAddressLine2" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="suburbCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="placeCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="provinceCode">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable
DECLARE organisation_id INTEGER;  
BEGIN	
   
SET ROLE postgres;

INSERT INTO organisations(	name,contact_person,cell_phone,email_address,
				work_phone,fax_no,street_first_line,street_second_line,
				postal_first_line,postal_second_line,suburb,place,province)
    VALUES (	alfresco_create_organisation."organisationName" ,
		alfresco_create_organisation."organisationContactFullName",
		alfresco_create_organisation."organisationContactCellPhoneNumber",
		alfresco_create_organisation."organisationEmailAddress",
		alfresco_create_organisation."organisationTelephoneNumber" ,
		alfresco_create_organisation."organisationFaxNumber",
		alfresco_create_organisation."organisationPhysicalAddressLine1",
		alfresco_create_organisation."organisationPhysicalAddressLine2",
		alfresco_create_organisation."organisationPostalAddressLine1",
		alfresco_create_organisation."organisationPostalAddressLine2",
		alfresco_create_organisation."suburbCode"::int,
		alfresco_create_organisation."placeCode"::int,
		alfresco_create_organisation."provinceCode"::int)

RETURNING organisations.id INTO organisation_id; 

        RETURN QUERY SELECT * FROM rpc_alfresco_get_organisations 
	WHERE  rpc_alfresco_get_organisations."organisationId" = organisation_id;

		       
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;]]></definition>
</function>

<view name="rpc_alfresco_get_calls">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2219.6"/>
	<reference>
		<expression><![CDATA[ SELECT calls.id AS "callId",
    calls.call_reference AS "callCode",
    calls.name AS "callName",
    key_performance_indicators.id AS "keyPerformanceIndicatorId",
    key_performance_indicators.code AS "keyPerformanceIndicatorCode",
    key_performance_indicators.name AS "keyPerformanceIndicatorName",
    key_result_areas.id AS "keyResultAreaId",
    key_result_areas.code AS "keyResultAreaCode",
    key_result_areas.name AS "keyResultAreaName",
    programmes.id AS "programmeId",
    programmes.code AS "programmeCode",
    programmes.name AS "programmeName"
   FROM (((calls
     LEFT JOIN key_performance_indicators ON ((calls.key_performance_indicator = key_performance_indicators.id)))
     LEFT JOIN key_result_areas ON ((key_result_areas.id = key_performance_indicators.key_result_area)))
     LEFT JOIN programmes ON ((key_result_areas.programme = programmes.id)));]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_calls" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="callId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="callCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="callName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="keyPerformanceIndicatorId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="keyPerformanceIndicatorCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="keyPerformanceIndicatorName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="keyResultAreaId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="keyResultAreaCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="keyResultAreaName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="programmeId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="programmeCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="programmeName">
		<type name="character varying" length="255"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_calls"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_calls"/>
	</return-type>
	<parameter name="callId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="callCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="programmeId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="programmeCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_calls 
	WHERE 
		rpc_alfresco_get_calls."callId" = COALESCE(alfresco_get_calls."callId",rpc_alfresco_get_calls."callId")
	AND 	rpc_alfresco_get_calls."callCode" = COALESCE(alfresco_get_calls."callCode",rpc_alfresco_get_calls."callCode")
	AND 	rpc_alfresco_get_calls."programmeId" = COALESCE(alfresco_get_calls."programmeId",rpc_alfresco_get_calls."programmeId")
	AND 	rpc_alfresco_get_calls."programmeCode" = COALESCE(alfresco_get_calls."programmeCode",rpc_alfresco_get_calls."programmeCode")
	ORDER BY rpc_alfresco_get_calls."callId";
        

	--EXCEPTION WHEN OTHERS THEN 
	--RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<function name="alfresco_get_organisations"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_organisations"/>
	</return-type>
	<parameter name="organisationId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="organisationCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_organisations 
	WHERE 
	rpc_alfresco_get_organisations."organisationId" = COALESCE(alfresco_get_organisations."organisationId",rpc_alfresco_get_organisations."organisationId")
	AND rpc_alfresco_get_organisations."organisationCode" = COALESCE(alfresco_get_organisations."organisationCode",rpc_alfresco_get_organisations."organisationCode")
	ORDER BY rpc_alfresco_get_organisations."organisationName";
        

--	EXCEPTION WHEN OTHERS THEN /*Catch all*/
--	RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<sequence name="places_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="places">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A place is a city or town, as defined by SAPO.]]></comment>
	<position x="1168.64" y="277.4"/>
	<column name="id" not-null="true" sequence="public.places_id_seq">
		<type name="integer"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="province">
		<type name="integer"/>
	</column>
	<constraint name="places_pkey" type="pk-constr" table="public.places">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="provinces_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="provinces">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A province is one of the 9 provinces in the country.]]></comment>
	<position x="1494.91" y="277.4"/>
	<column name="id" not-null="true" sequence="public.provinces_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<constraint name="provinces_code_uq" type="uq-constr" table="public.provinces">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="provinces_name_uq" type="uq-constr" table="public.provinces">
		<columns names="name" ref-type="src-columns"/>
	</constraint>
	<constraint name="provinces_pkey" type="pk-constr" table="public.provinces">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="rpc_alfresco_get_places">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="296.006" y="2219.6"/>
	<reference>
		<expression><![CDATA[ SELECT places.id AS "placesId",
    places.name AS "placesName",
    provinces.id AS "provinceId",
    provinces.code AS "provinceCode",
    provinces.name AS "provinceName"
   FROM (places
     JOIN provinces ON ((places.province = provinces.id)))
  ORDER BY places.name;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_places" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="placesId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="placesName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="provinceId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="provinceCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="provinceName">
		<type name="character varying" length="255"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_places"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_places"/>
	</return-type>
	<parameter name="provinceId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="provinceCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
		
        RETURN QUERY SELECT * FROM rpc_alfresco_get_places 
	WHERE 
	 	rpc_alfresco_get_places."provinceId" = COALESCE(alfresco_get_places."provinceId",rpc_alfresco_get_places."provinceId")
	AND 	rpc_alfresco_get_places."provinceCode" = COALESCE(alfresco_get_places."provinceCode",rpc_alfresco_get_places."provinceCode")
	ORDER BY rpc_alfresco_get_places."provinceCode";
        
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<view name="rpc_alfresco_get_programmes">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="554.606" y="2219.6"/>
	<reference>
		<expression><![CDATA[ SELECT programmes.id AS "programmeId",
    programmes.code AS "programmeCode",
    programmes.name AS "programmeName"
   FROM programmes;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_programmes" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="programmeId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="programmeCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="programmeName">
		<type name="character varying" length="255"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_programmes"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_programmes"/>
	</return-type>
	<parameter name="programmeId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="programmeCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_programmes 
	WHERE 
	 	rpc_alfresco_get_programmes."programmeId" = COALESCE(alfresco_get_programmes."programmeId",rpc_alfresco_get_programmes."programmeId")
	AND 	rpc_alfresco_get_programmes."programmeCode" = COALESCE(alfresco_get_programmes."programmeCode",rpc_alfresco_get_programmes."programmeCode")
	ORDER BY rpc_alfresco_get_programmes."programmeCode";
        

	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<view name="rpc_alfresco_get_project_statuses">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="855.613" y="2219.6"/>
	<reference>
		<expression><![CDATA[ SELECT call_application_statuses.id AS "projectStatusId",
    (call_application_statuses.status)::character varying(50) AS "projectStatusCode",
    call_application_statuses.description AS "projectStatusName"
   FROM call_application_statuses
  ORDER BY call_application_statuses.id;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_project_statuses" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="projectStatusId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectStatusCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="projectStatusName">
		<type name="text"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_project_statuses"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_project_statuses"/>
	</return-type>
	<parameter name="projectStatusId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="projectStatusCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_project_statuses 
	WHERE 
	rpc_alfresco_get_project_statuses."projectStatusId" = COALESCE(alfresco_get_project_statuses."projectStatusId",rpc_alfresco_get_project_statuses."projectStatusId")
	AND rpc_alfresco_get_project_statuses."projectStatusCode" = COALESCE(alfresco_get_project_statuses."projectStatusCode",rpc_alfresco_get_project_statuses."projectStatusCode")
	ORDER BY rpc_alfresco_get_project_statuses."projectStatusId";
        

--	EXCEPTION WHEN OTHERS THEN /*Catch all*/
--	RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<view name="rpc_alfresco_get_projects">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1182.49" y="2219.6"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id AS "projectId",
    (call_applications.id)::text AS "projectCode",
    call_applications.title AS "projectTitle",
    rpc_alfresco_get_calls."programmeId",
    rpc_alfresco_get_calls."programmeCode",
    rpc_alfresco_get_calls."programmeName",
    rpc_alfresco_get_calls."callId",
    rpc_alfresco_get_calls."callCode",
    rpc_alfresco_get_calls."callName",
    rpc_alfresco_get_organisations."organisationId",
    rpc_alfresco_get_organisations."organisationCode",
    rpc_alfresco_get_organisations."organisationName",
    rpc_alfresco_get_organisations."organisationContactFullName",
    rpc_alfresco_get_organisations."organisationContactCellPhoneNumer",
    rpc_alfresco_get_organisations."organisationEmailAddress",
    rpc_alfresco_get_organisations."organisationTelephoneNumber",
    rpc_alfresco_get_organisations."organisationFaxNumber",
    rpc_alfresco_get_organisations."organisationPhysicalAddress",
    rpc_alfresco_get_organisations."organisationPostalAddress"
   FROM ((call_applications
     LEFT JOIN rpc_alfresco_get_calls ON ((call_applications.call = rpc_alfresco_get_calls."callId")))
     LEFT JOIN rpc_alfresco_get_organisations ON ((call_applications.applicant = rpc_alfresco_get_organisations."organisationId")))
  ORDER BY rpc_alfresco_get_calls."programmeName", call_applications.id;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_projects" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="projectId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="projectCode">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="projectTitle">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="programmeId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="programmeCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="programmeName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="callId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="callCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="callName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="organisationCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="organisationName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationContactFullName">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationContactCellPhoneNumer">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationEmailAddress">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationTelephoneNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationFaxNumber">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="organisationPhysicalAddress">
		<type name="text"/>
	</typeattrib>
	<typeattrib name="organisationPostalAddress">
		<type name="text"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_projects"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="1000">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_projects"/>
	</return-type>
	<parameter name="projectId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="projectCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="programmeId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="programmeCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="callId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="callCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<parameter name="organisationId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="organisationCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN

	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_projects 
	WHERE 
		rpc_alfresco_get_projects."projectId" = COALESCE(alfresco_get_projects."projectId",rpc_alfresco_get_projects."projectId")
	AND 	rpc_alfresco_get_projects."projectCode" = COALESCE(alfresco_get_projects."projectCode",rpc_alfresco_get_projects."projectCode")
	
	AND 	rpc_alfresco_get_projects."programmeId" = COALESCE(alfresco_get_projects."programmeId",rpc_alfresco_get_projects."programmeId")
	AND 	rpc_alfresco_get_projects."programmeCode" = COALESCE(alfresco_get_projects."programmeCode",rpc_alfresco_get_projects."programmeCode")

	AND 	rpc_alfresco_get_projects."callId" = COALESCE(alfresco_get_projects."callId",rpc_alfresco_get_projects."callId")
	AND 	rpc_alfresco_get_projects."callCode" = COALESCE(alfresco_get_projects."callCode",rpc_alfresco_get_projects."callCode")

	AND 	rpc_alfresco_get_projects."organisationId" = COALESCE(alfresco_get_projects."organisationId",rpc_alfresco_get_projects."organisationId")
	AND 	rpc_alfresco_get_projects."organisationCode" = COALESCE(alfresco_get_projects."organisationCode",rpc_alfresco_get_projects."organisationCode");
	
	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<view name="rpc_alfresco_get_provinces">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2307"/>
	<reference>
		<expression><![CDATA[ SELECT provinces.id AS "provinceId",
    provinces.code AS "provinceCode",
    provinces.name AS "provinceName"
   FROM provinces
  ORDER BY provinces.code;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_provinces" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="provinceId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="provinceCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="provinceName">
		<type name="character varying" length="255"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_provinces"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_provinces"/>
	</return-type>
	<parameter name="provinceId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="provinceCode" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_provinces 
	WHERE 
	 	rpc_alfresco_get_provinces."provinceId" = COALESCE(alfresco_get_provinces."provinceId",rpc_alfresco_get_provinces."provinceId")
	AND 	rpc_alfresco_get_provinces."provinceCode" = COALESCE(alfresco_get_provinces."provinceCode",rpc_alfresco_get_provinces."provinceCode")
	ORDER BY rpc_alfresco_get_provinces."provinceCode";
        

	--EXCEPTION WHEN OTHERS THEN /*Catch all*/
	--RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<view name="rpc_alfresco_get_suburbs">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="330.991" y="2307"/>
	<reference>
		<expression><![CDATA[ SELECT suburbs.id AS "suburbId",
    suburbs.name AS "suburbName",
    places.id AS "placeId",
    places.name AS "placeName",
    suburbs.po_box_code AS "suburbPOBoxCode",
    suburbs.street_code AS "suburbStreetCode",
    suburbs.latitude AS "suburbLatitude",
    suburbs.longitude AS "subutbLongitude"
   FROM (suburbs
     JOIN places ON ((suburbs.place = places.id)))
  ORDER BY suburbs.name;]]></expression>
	</reference>
</view>

<usertype name="rpc_alfresco_get_suburbs" configuration="composite">
	<schema name="public"/>
	<role name="postgres"/>
	<typeattrib name="suburbId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="suburbName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="placeId">
		<type name="integer"/>
	</typeattrib>
	<typeattrib name="placeName">
		<type name="character varying" length="255"/>
	</typeattrib>
	<typeattrib name="suburbPOBoxCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="suburbStreetCode">
		<type name="character varying" length="50"/>
	</typeattrib>
	<typeattrib name="suburbLatitude">
		<type name="real"/>
	</typeattrib>
	<typeattrib name="subutbLongitude">
		<type name="real"/>
	</typeattrib>
</usertype>

<function name="alfresco_get_suburbs"
		window-func="false"
		returns-setof="true"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="1"
		row-amount="50">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="public.rpc_alfresco_get_suburbs"/>
	</return-type>
	<parameter name="placeId" default-value="NULL::integer">
		<type name="integer"/>
	</parameter>
	<parameter name="placeName" default-value="NULL::text">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
--#variable_conflict use_variable   
BEGIN
	SET ROLE postgres;
	
        RETURN QUERY SELECT * FROM rpc_alfresco_get_suburbs 
	WHERE 
	 	rpc_alfresco_get_suburbs."placeId" = COALESCE(alfresco_get_suburbs."placeId",rpc_alfresco_get_suburbs."placeId")
	AND 	rpc_alfresco_get_suburbs."placeName" = COALESCE(alfresco_get_suburbs."placeName",rpc_alfresco_get_suburbs."placeName")
	ORDER BY rpc_alfresco_get_suburbs."suburbName";
        

--	EXCEPTION WHEN OTHERS THEN /*Catch all*/
--	RAISE EXCEPTION 'Something went wrong';	
END;
]]></definition>
</function>

<function name="genorgcode"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
begin
  if tg_op = 'INSERT' then
    new.code = 'ORG'::text || to_char(new.id , 'FM00000'::text); 
  end if;
  return new;
end
]]></definition>
</function>

<function name="login"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="basic_auth.jwt_claims"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<parameter name="pass">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
declare
  _role name;
  result basic_auth.jwt_claims;
begin
  select basic_auth.user_role(email, pass) into _role;
  if _role is null then
    raise invalid_password using message = 'invalid user or password';
  end if;
  -- TODO; check verified flag if you care whether users
  -- have validated their emails
  select _role as role, login.email as email into result;
  return result;
end;
]]></definition>
</function>

<function name="request_password_reset"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
declare
  tok uuid;
begin
  delete from basic_auth.tokens
   where token_type = 'reset'
     and tokens.email = request_password_reset.email;

  select uuid_generate_v4() into tok;
  insert into basic_auth.tokens (token, token_type, email)
         values (tok, 'reset', request_password_reset.email);
  perform pg_notify('reset',
    json_build_object(
      'email', request_password_reset.email,
      'token', tok,
      'token_type', 'reset'
    )::text
  );
end;
]]></definition>
</function>

<function name="reset_password"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<parameter name="token">
		<type name="uuid"/>
	</parameter>
	<parameter name="pass">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
declare
  tok uuid;
begin
  if exists(select 1 from basic_auth.tokens
             where tokens.email = reset_password.email
               and tokens.token = reset_password.token
               and token_type = 'reset') then
    update basic_auth.users set pass=reset_password.pass
     where users.email = reset_password.email;

    delete from basic_auth.tokens
     where tokens.email = reset_password.email
       and tokens.token = reset_password.token
       and token_type = 'reset';
  else
    raise invalid_password using message =
      'invalid user or token';
  end if;
  delete from basic_auth.tokens
   where token_type = 'reset'
     and tokens.email = reset_password.email;

  select uuid_generate_v4() into tok;
  insert into basic_auth.tokens (token, token_type, email)
         values (tok, 'reset', reset_password.email);
  perform pg_notify('reset',
    json_build_object(
      'email', reset_password.email,
      'token', tok
    )::text
  );
end;
]]></definition>
</function>

<function name="signup"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="sql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<parameter name="pass">
		<type name="text"/>
	</parameter>
	<definition><![CDATA[
  insert into basic_auth.users (email, pass, role) values
    (signup.email, signup.pass, 'anon');
]]></definition>
</function>

<function name="update_users"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="trigger"/>
	</return-type>
	<definition><![CDATA[
begin
  if tg_op = 'INSERT' then
    perform basic_auth.clearance_for_role(new.role);

    insert into basic_auth.users
      (role, pass, email, verified) values
      (coalesce(new.role, 'anon'), new.pass,
        new.email, coalesce(new.verified, false));
    return new;
  elsif tg_op = 'UPDATE' then
    -- no need to check clearance for old.role because
    -- an ineligible row would not even available to update (http 404)
    perform basic_auth.clearance_for_role(new.role);

    update basic_auth.users set
      email  = new.email,
      role   = new.role,
      pass   = new.pass,
      verified = coalesce(new.verified, old.verified, false)
      where email = old.email;
    return new;
  elsif tg_op = 'DELETE' then
    -- no need to check clearance for old.role (see previous case)

    delete from basic_auth.users
     where basic_auth.email = old.email;
    return null;
  end if;
end
]]></definition>
</function>

<function name="validate_user"
		window-func="false"
		returns-setof="false"
		behavior-type="CALLED ON NULL INPUT"
		function-type="VOLATILE"
		security-type="SECURITY INVOKER"
		execution-cost="100"
		row-amount="0">
	<schema name="public"/>
	<role name="postgres"/>
	<language name="plpgsql" sql-disabled="true"/>
	<return-type>
	<type name="void"/>
	</return-type>
	<parameter name="email">
		<type name="text"/>
	</parameter>
	<parameter name="token">
		<type name="uuid"/>
	</parameter>
	<definition><![CDATA[
declare
  tok uuid;
begin
  if exists(select 1 from basic_auth.tokens
             where tokens.email = validate_user.email
               and tokens.token = validate_user.token
               and token_type = 'validation') then

    update basic_auth.users set verified=true
     where users.email = validate_user.email;

    delete from basic_auth.tokens
     where tokens.email = validate_user.email
       and tokens.token = validate_user.token
       and token_type = 'validation';
  else
    raise invalid_password using message =
      'invalid user or token';
  end if;

end;
]]></definition>
</function>

<table name="tokens">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<position x="1968.28" y="50"/>
	<column name="token" not-null="true">
		<type name="uuid"/>
	</column>
	<column name="token_type" not-null="true">
		<type name="public.token_type_enum"/>
	</column>
	<column name="email" not-null="true">
		<type name="text"/>
	</column>
	<column name="created_at" not-null="true" default-value="('now'::text)::date">
		<type name="timestamp with time zone" with-timezone="true"/>
	</column>
	<constraint name="tokens_pkey" type="pk-constr" table="basic_auth.tokens">
		<columns names="token" ref-type="src-columns"/>
	</constraint>
</table>

<table name="users">
	<schema name="basic_auth"/>
	<role name="postgres"/>
	<position x="2345.59" y="50"/>
	<column name="email" not-null="true">
		<type name="text"/>
	</column>
	<column name="pass" not-null="true">
		<type name="text"/>
	</column>
	<column name="role" not-null="true">
		<type name="name"/>
	</column>
	<column name="verified" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<constraint name="users_email_check" type="ck-constr" table="basic_auth.users">
			<expression><![CDATA[(email ~* '^.+@.+\..+$'::text)]]></expression>
	</constraint>
	<constraint name="users_pass_check" type="ck-constr" table="basic_auth.users">
			<expression><![CDATA[(length(pass) < 512)]]></expression>
	</constraint>
	<constraint name="users_role_check" type="ck-constr" table="basic_auth.users">
			<expression><![CDATA[(length((role)::text) < 512)]]></expression>
	</constraint>
	<constraint name="users_pkey" type="pk-constr" table="basic_auth.users">
		<columns names="email" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="application_compliance_officers_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="application_compliance_officers">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1285.58" y="537.717"/>
	<column name="id" not-null="true" default-value="nextval('application_assessors_id_seq'::regclass)">
		<type name="integer"/>
	</column>
	<column name="application">
		<type name="integer"/>
	</column>
	<column name="compliance_officer">
		<type name="integer"/>
	</column>
	<column name="lead" not-null="true">
		<type name="boolean"/>
	</column>
	<column name="complete" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="compliance_section">
		<type name="integer"/>
	</column>
	<column name="reviewed" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<constraint name="application_compliance_officers_pk" type="pk-constr" table="public.application_compliance_officers">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="officer_application_uq" type="uq-constr" table="public.application_compliance_officers">
		<columns names="application,compliance_officer,compliance_section" ref-type="src-columns"/>
	</constraint>
</table>

<view name="applicationid_with_email">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="600.841" y="2307"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id,
    call_applications.id AS code,
    organisations.email_address AS organisation_email_address
   FROM (call_applications
     LEFT JOIN organisations ON ((call_applications.applicant = organisations.id)));]]></expression>
	</reference>
</view>

<sequence name="compliance_templates_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="compliance_templates">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1448.08" y="433.691"/>
	<column name="id" not-null="true" sequence="public.compliance_templates_id_seq">
		<type name="integer"/>
	</column>
	<column name="name">
		<type name="character varying" length="255"/>
	</column>
	<column name="title">
		<type name="character varying" length="255"/>
	</column>
	<column name="subtitle">
		<type name="text"/>
	</column>
	<constraint name="compliance_templates_pk" type="pk-constr" table="public.compliance_templates">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="bank_accounts_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="bank_accounts">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Bank account details of an organisation.]]></comment>
	<position x="607.276" y="674.6"/>
	<column name="id" not-null="true" sequence="public.bank_accounts_id_seq">
		<type name="integer"/>
	</column>
	<column name="account_number" not-null="true">
		<type name="text"/>
	</column>
	<column name="account_name">
		<type name="text"/>
	</column>
	<column name="account_type">
		<type name="text"/>
	</column>
	<column name="branch_name">
		<type name="text"/>
	</column>
	<column name="branch_code">
		<type name="text"/>
	</column>
	<column name="bank" not-null="true">
		<type name="integer"/>
	</column>
	<constraint name="bank_accounts_pkey" type="pk-constr" table="public.bank_accounts">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="beneficiaries_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="beneficiaries">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A milestone type is a stage in the life-cycle of a project.]]></comment>
	<position x="279.825" y="766.029"/>
	<column name="id" not-null="true" sequence="public.beneficiaries_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="type" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="beneficiaries_code_uq" type="uq-constr" table="public.beneficiaries">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="beneficiaries_pk" type="pk-constr" table="public.beneficiaries">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="beneficiaries_types_type_uq" type="uq-constr" table="public.beneficiaries">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="call_evaluations_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="call_evaluations">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A call evaluation is a score given by an evaluator for a project proposal.]]></comment>
	<position x="1018.48" y="846.029"/>
	<column name="id" not-null="true" sequence="public.call_evaluations_id_seq">
		<type name="integer"/>
	</column>
	<column name="call_application">
		<type name="integer"/>
	</column>
	<column name="score">
		<type name="integer"/>
	</column>
	<column name="remarks">
		<type name="text"/>
	</column>
	<column name="evaluator">
		<type name="integer"/>
	</column>
	<column name="evaluation_date">
		<type name="date"/>
	</column>
	<constraint name="call_evaluations_pkey" type="pk-constr" table="public.call_evaluations">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="categories_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="categories">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1851.04" y="446.649"/>
	<column name="id" not-null="true" sequence="public.categories_id_seq">
		<type name="integer"/>
	</column>
	<column name="template">
		<type name="integer"/>
	</column>
	<column name="name" not-null="true">
		<type name="text"/>
	</column>
	<column name="title" not-null="true">
		<type name="text"/>
	</column>
	<column name="subtitle">
		<type name="text"/>
	</column>
	<constraint name="categories_pk" type="pk-constr" table="public.categories">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="compliance_answers_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="compliance_answers">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1411.86" y="682.364"/>
	<column name="id" not-null="true" sequence="public.compliance_answers_id_seq">
		<type name="integer"/>
	</column>
	<column name="answer" not-null="true">
		<type name="text"/>
	</column>
	<column name="application_compliance_officer">
		<type name="integer"/>
	</column>
	<column name="question">
		<type name="integer"/>
	</column>
	<column name="motivation">
		<type name="text"/>
	</column>
	<constraint name="compliance_answers_pk" type="pk-constr" table="public.compliance_answers">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="compliance_answers_uq" type="uq-constr" table="public.compliance_answers">
		<columns names="application_compliance_officer,question" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="contract_budget_items_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="contract_budget_items">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="642.797" y="876"/>
	<column name="id" not-null="true" sequence="public.contract_budget_items_id_seq">
		<type name="integer"/>
	</column>
	<column name="item">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="amount">
		<type name="money"/>
	</column>
	<column name="contract">
		<type name="integer"/>
	</column>
	<constraint name="budget_pk" type="pk-constr" table="public.contract_budget_items">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="contract_implementation_plan_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="contract_implementation_plan">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1168.67" y="887.818"/>
	<column name="id" not-null="true" sequence="public.contract_implementation_plan_id_seq">
		<type name="integer"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="contract">
		<type name="integer"/>
	</column>
	<constraint name="activities_pk" type="pk-constr" table="public.contract_implementation_plan">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="contract_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="contract_types">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1287.48" y="876"/>
	<column name="id" not-null="true" sequence="public.contract_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="code">
		<type name="character varying" length="50"/>
	</column>
	<column name="type">
		<type name="character varying" length="255"/>
	</column>
	<constraint name="contract_types_code_uq" type="uq-constr" table="public.contract_types">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="contract_types_pk" type="pk-constr" table="public.contract_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="contract_types_type_uq" type="uq-constr" table="public.contract_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="email_notifications_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="email_notifications">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="1019.4"/>
	<column name="id" not-null="true" sequence="public.email_notifications_id_seq">
		<type name="integer"/>
	</column>
	<column name="email_to" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="subject">
		<type name="text"/>
	</column>
	<column name="body">
		<type name="text"/>
	</column>
	<column name="sent" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="retries" not-null="true" default-value="0">
		<type name="smallint"/>
	</column>
	<column name="failed" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="token_email" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="token">
		<type name="text"/>
	</column>
	<column name="token_type">
		<type name="text"/>
	</column>
	<column name="status_message">
		<type name="character varying" length="100"/>
	</column>
	<constraint name="email_notifications_pkey" type="pk-constr" table="public.email_notifications">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="email_notifications_not_sent">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="866.675" y="2307"/>
	<reference>
		<expression><![CDATA[ SELECT email_notifications.id,
    email_notifications.email_to,
    email_notifications.subject,
    email_notifications.body,
    email_notifications.sent,
    email_notifications.retries,
    email_notifications.failed,
    email_notifications.token_email,
    email_notifications.token,
    email_notifications.token_type
   FROM email_notifications
  WHERE ((email_notifications.failed = false) AND (email_notifications.sent = false));]]></expression>
	</reference>
</view>

<view name="email_notifications_to_json">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1158.01" y="2307"/>
	<reference>
		<expression><![CDATA[ SELECT row_to_json(t.*) AS row_to_json
   FROM ( SELECT email_notifications.id,
            email_notifications.email_to,
            email_notifications.subject,
            email_notifications.body,
            email_notifications.sent,
            email_notifications.retries,
            email_notifications.failed,
            email_notifications.token_email,
            email_notifications.token,
            email_notifications.token_type
           FROM email_notifications
          WHERE ((email_notifications.failed = false) AND (email_notifications.sent = false))) t;]]></expression>
	</reference>
</view>

<view name="grid_applications">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2394.4"/>
	<reference>
		<expression><![CDATA[ SELECT call_applications.id,
    calls.call_reference,
    organisations.name,
    organisations.email_address
   FROM ((call_applications
     LEFT JOIN organisations ON ((call_applications.applicant = organisations.id)))
     LEFT JOIN calls ON ((call_applications.call = calls.id)));]]></expression>
	</reference>
</view>

<sequence name="persons_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="persons">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A person is a member of staff or contact person in an organisation.]]></comment>
	<position x="421.156" y="1019.4"/>
	<column name="id" not-null="true" sequence="public.persons_id_seq">
		<type name="integer"/>
	</column>
	<column name="id_no">
		<type name="character varying" length="255"/>
	</column>
	<column name="last_name" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="first_names">
		<type name="character varying" length="255"/>
	</column>
	<column name="cell_phone">
		<type name="character varying" length="255"/>
	</column>
	<column name="work_phone">
		<type name="character varying" length="255"/>
	</column>
	<column name="email_address">
		<type name="character varying" length="255"/>
	</column>
	<column name="job_title">
		<type name="integer"/>
	</column>
	<column name="personal_title">
		<type name="integer"/>
	</column>
	<column name="employer">
		<type name="integer"/>
	</column>
	<constraint name="persons_email_uq0" type="uq-constr" table="public.persons">
		<columns names="email_address" ref-type="src-columns"/>
	</constraint>
	<constraint name="persons_pkey" type="pk-constr" table="public.persons">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="grid_calls">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="283.756" y="2394.4"/>
	<reference>
		<expression><![CDATA[ SELECT calls.id,
    calls.call_reference,
    calls.name,
    key_performance_indicators.code AS programme_code,
    key_result_areas.code AS kra_code,
    programmes.code AS kpi_code
   FROM (((calls
     LEFT JOIN key_performance_indicators ON ((calls.key_performance_indicator = key_performance_indicators.id)))
     LEFT JOIN key_result_areas ON ((key_performance_indicators.key_result_area = key_result_areas.id)))
     LEFT JOIN programmes ON ((key_result_areas.programme = programmes.id)));]]></expression>
	</reference>
</view>

<view name="grid_kpis">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="508.559" y="2394.4"/>
	<reference>
		<expression><![CDATA[ SELECT key_performance_indicators.id,
    programmes.code AS programme_code,
    key_result_areas.code AS kra_code,
    key_performance_indicators.code,
    key_performance_indicators.name,
    key_performance_indicators.description
   FROM ((key_performance_indicators
     LEFT JOIN key_result_areas ON ((key_performance_indicators.key_result_area = key_result_areas.id)))
     JOIN programmes ON ((key_result_areas.programme = programmes.id)));]]></expression>
	</reference>
</view>

<view name="grid_kras">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="760.847" y="2394.4"/>
	<reference>
		<expression><![CDATA[ SELECT key_result_areas.id,
    programmes.code AS programme_code,
    key_result_areas.code,
    key_result_areas.name,
    key_result_areas.description
   FROM (programmes
     RIGHT JOIN key_result_areas ON ((key_result_areas.programme = programmes.id)));]]></expression>
	</reference>
</view>

<sequence name="organisation_statuses_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="organisation_statuses">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The status of an organisation.]]></comment>
	<position x="782.016" y="1019.4"/>
	<column name="id" not-null="true" sequence="public.organisation_statuses_id_seq">
		<type name="integer"/>
	</column>
	<column name="status" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="organisation_statuses_pkey" type="pk-constr" table="public.organisation_statuses">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="organisation_statuses_status_uq" type="uq-constr" table="public.organisation_statuses">
		<columns names="status" ref-type="src-columns"/>
	</constraint>
</table>

<view name="grid_org_statuses">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="999.791" y="2394.4"/>
	<reference>
		<expression><![CDATA[ SELECT organisation_statuses.id,
    organisation_statuses.status,
    organisation_statuses.description
   FROM organisation_statuses;]]></expression>
	</reference>
</view>

<sequence name="organisation_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="organisation_types">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[An organisation type describes nature of the institution, such as Funder, Grantee, Partner, Government Department and so on.]]></comment>
	<position x="1142.09" y="1019.4"/>
	<column name="id" not-null="true" sequence="public.organisation_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="type" not-null="true">
		<type name="text"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="organisation_types_pkey" type="pk-constr" table="public.organisation_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="organisation_types_type_uq" type="uq-constr" table="public.organisation_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<view name="grid_org_types">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2481.8"/>
	<reference>
		<expression><![CDATA[ SELECT organisation_types.id,
    organisation_types.type,
    organisation_types.description
   FROM organisation_types;]]></expression>
	</reference>
</view>

<view name="grid_organisations">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="294.694" y="2481.8"/>
	<reference>
		<expression><![CDATA[ SELECT organisations.id,
    organisations.code,
    organisations.name,
    organisations.web_site,
    organisations.email_address,
    organisations1.name AS referee,
    organisations2.name AS auditor,
    organisation_types.type AS organisation_type,
    provinces.name AS province
   FROM ((((organisations
     LEFT JOIN organisations organisations1 ON ((organisations.referee = organisations1.id)))
     LEFT JOIN organisations organisations2 ON ((organisations.auditor = organisations2.id)))
     LEFT JOIN organisation_types ON ((organisations.organisation_type = organisation_types.id)))
     LEFT JOIN provinces ON ((organisations.province = provinces.id)))
  ORDER BY organisations.name;]]></expression>
	</reference>
</view>

<view name="grid_places">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="528.981" y="2481.8"/>
	<reference>
		<expression><![CDATA[ SELECT places.id,
    places.name,
    provinces.name AS province
   FROM (places
     LEFT JOIN provinces ON ((places.province = provinces.id)));]]></expression>
	</reference>
</view>

<view name="grid_programmes">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="763.159" y="2481.8"/>
	<reference>
		<expression><![CDATA[ SELECT programmes.id,
    programmes.code,
    programmes.name,
    programmes.description,
    programmes.start_date,
    programmes.end_date
   FROM programmes;]]></expression>
	</reference>
</view>

<view name="grid_provinces">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1013.12" y="2481.8"/>
	<reference>
		<expression><![CDATA[ SELECT provinces.id,
    provinces.code,
    provinces.name
   FROM provinces;]]></expression>
	</reference>
</view>

<view name="grid_suburbs">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2569.2"/>
	<reference>
		<expression><![CDATA[ SELECT suburbs.id,
    suburbs.name,
    places.name AS place,
    provinces.name AS province,
    suburbs.street_code,
    suburbs.po_box_code
   FROM ((suburbs
     LEFT JOIN places ON ((suburbs.place = places.id)))
     LEFT JOIN provinces ON ((suburbs.province = provinces.id)));]]></expression>
	</reference>
</view>

<sequence name="job_titles_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="job_titles">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The job title of a person.]]></comment>
	<position x="1396.66" y="1019.4"/>
	<column name="id" not-null="true" sequence="public.job_titles_id_seq">
		<type name="integer"/>
	</column>
	<column name="title" not-null="true">
		<type name="text"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="job_titles_pkey" type="pk-constr" table="public.job_titles">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="job_titles_title_uq" type="uq-constr" table="public.job_titles">
		<columns names="title" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="key_performance_indicators_targets_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="key_performance_indicators_targets">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="1250.6"/>
	<column name="id" not-null="true" sequence="public.key_performance_indicators_targets_id_seq">
		<type name="integer"/>
	</column>
	<column name="month" not-null="true">
		<type name="date"/>
	</column>
	<column name="target">
		<type name="text"/>
	</column>
	<column name="actual">
		<type name="text"/>
	</column>
	<column name="key_performance_indicator">
		<type name="integer"/>
	</column>
	<constraint name="key_performance_indicators_targets_pk" type="pk-constr" table="public.key_performance_indicators_targets">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="key_performance_indicators_targets_uq" type="uq-constr" table="public.key_performance_indicators_targets">
		<columns names="key_performance_indicator,month" ref-type="src-columns"/>
	</constraint>
</table>

<view name="kpi_next_call_reference">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="292.772" y="2569.2"/>
	<reference>
		<expression><![CDATA[ SELECT m.kpi_id,
    ((m.next_call_reference || '/'::text) || to_char((m.count_kpi_calls + 1), 'FM00'::text)) AS next_call_reference
   FROM ( SELECT key_performance_indicators.id AS kpi_id,
            (((((programmes.code)::text || '/'::text) || (key_result_areas.code)::text) || '/'::text) || (key_performance_indicators.code)::text) AS next_call_reference,
            count(calls.id) AS count_kpi_calls
           FROM (((key_performance_indicators
             LEFT JOIN calls ON ((key_performance_indicators.id = calls.key_performance_indicator)))
             LEFT JOIN key_result_areas ON ((key_performance_indicators.key_result_area = key_result_areas.id)))
             LEFT JOIN programmes ON ((key_result_areas.programme = programmes.id)))
          GROUP BY (((((programmes.code)::text || '/'::text) || (key_result_areas.code)::text) || '/'::text) || (key_performance_indicators.code)::text), key_performance_indicators.id) m;]]></expression>
	</reference>
</view>

<view name="lookup_banks">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="549.622" y="2569.2"/>
	<reference>
		<expression><![CDATA[ SELECT organisations.id,
    organisations.name,
    organisation_types.type
   FROM (organisations
     JOIN organisation_types ON ((organisations.organisation_type = organisation_types.id)))
  WHERE (organisation_types.type = 'Bank'::text)
  ORDER BY organisations.name;]]></expression>
	</reference>
</view>

<view name="lookup_calls">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="783.909" y="2569.2"/>
	<reference>
		<expression><![CDATA[ SELECT calls.id,
    calls.call_reference AS code,
    calls.name
   FROM calls;]]></expression>
	</reference>
</view>

<view name="lookup_organisations">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1008.71" y="2569.2"/>
	<reference>
		<expression><![CDATA[ SELECT organisations.id,
    organisations.code,
    organisations.name,
    organisations.web_site,
    organisations.email_address,
    organisations1.name AS referee,
    organisations2.name AS auditor,
    organisation_types.type AS organisation_type,
    provinces.name AS province
   FROM ((((organisations
     LEFT JOIN organisations organisations1 ON ((organisations.referee = organisations1.id)))
     LEFT JOIN organisations organisations2 ON ((organisations.auditor = organisations2.id)))
     LEFT JOIN organisation_types ON ((organisations.organisation_type = organisation_types.id)))
     LEFT JOIN provinces ON ((organisations.province = provinces.id)));]]></expression>
	</reference>
</view>

<view name="lookup_programmes">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2656.6"/>
	<reference>
		<expression><![CDATA[ SELECT programmes.id,
    programmes.code,
    programmes.name
   FROM programmes;]]></expression>
	</reference>
</view>

<sequence name="milestone_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="milestone_types">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A milestone type is a stage in the life-cycle of a project.]]></comment>
	<position x="402.047" y="1250.6"/>
	<column name="id" not-null="true" sequence="public.milestone_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="type" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="milestone_types_code_uq" type="uq-constr" table="public.milestone_types">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="milestone_types_pkey" type="pk-constr" table="public.milestone_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="milestone_types_type_uq" type="uq-constr" table="public.milestone_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="organisation_bank_accounts_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="organisation_bank_accounts">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="762.125" y="1250.6"/>
	<column name="id" not-null="true" sequence="public.organisation_bank_accounts_id_seq">
		<type name="integer"/>
	</column>
	<column name="ogranisation">
		<type name="integer"/>
	</column>
	<column name="bankaccount">
		<type name="integer"/>
	</column>
	<constraint name="organisation_bank_accounts_pk" type="pk-constr" table="public.organisation_bank_accounts">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="payment_schedule_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="payment_schedule">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1052.55" y="1250.6"/>
	<column name="id" not-null="true" sequence="public.payment_schedule_id_seq">
		<type name="integer"/>
	</column>
	<column name="tranche" not-null="true">
		<type name="integer"/>
	</column>
	<column name="amount" not-null="true">
		<type name="money"/>
	</column>
	<column name="payment_date" not-null="true">
		<type name="date"/>
	</column>
	<column name="contract">
		<type name="integer"/>
	</column>
	<constraint name="payment_schedule_pk" type="pk-constr" table="public.payment_schedule">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="payment_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="payment_types">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1307.9" y="1250.6"/>
	<column name="id" not-null="true" sequence="public.payment_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="code">
		<type name="character varying" length="50"/>
	</column>
	<column name="type">
		<type name="character varying" length="255"/>
	</column>
	<constraint name="payment_types_code_uq" type="uq-constr" table="public.payment_types">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="payment_types_pk" type="pk-constr" table="public.payment_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="payment_types_type_uq" type="uq-constr" table="public.payment_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="person_bank_accounts_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="person_bank_accounts">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="1394"/>
	<column name="id" not-null="true" sequence="public.person_bank_accounts_id_seq">
		<type name="integer"/>
	</column>
	<column name="bankaccount">
		<type name="integer"/>
	</column>
	<column name="person">
		<type name="integer"/>
	</column>
	<constraint name="person_bank_accounts_pk" type="pk-constr" table="public.person_bank_accounts">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="personal_titles_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="personal_titles">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The title of a person used in the salutation.]]></comment>
	<position x="301.647" y="1394"/>
	<column name="id" not-null="true" sequence="public.personal_titles_id_seq">
		<type name="integer"/>
	</column>
	<column name="title" not-null="true">
		<type name="text"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="personal_titles_pkey" type="pk-constr" table="public.personal_titles">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="personal_titles_title_key" type="uq-constr" table="public.personal_titles">
		<columns names="title" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_beneficiaries_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_beneficiaries">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="556.209" y="1394"/>
	<column name="id" not-null="true" sequence="public.project_beneficiaries_id_seq">
		<type name="integer"/>
	</column>
	<column name="beneficiary">
		<type name="integer"/>
	</column>
	<column name="project">
		<type name="integer"/>
	</column>
	<constraint name="project_beneficiaries_pk" type="pk-constr" table="public.project_beneficiaries">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="project_beneficiaries_uq" type="uq-constr" table="public.project_beneficiaries">
		<columns names="beneficiary,project" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_contracts_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_contracts">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="807.881" y="1394"/>
	<column name="id" not-null="true" sequence="public.project_contracts_id_seq">
		<type name="integer"/>
	</column>
	<column name="project">
		<type name="integer"/>
	</column>
	<column name="contract_type">
		<type name="integer"/>
	</column>
	<column name="person">
		<type name="integer"/>
	</column>
	<constraint name="project_contracts_pk" type="pk-constr" table="public.project_contracts">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_expenses_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_expenses">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Project expenses are incurred by project activities]]></comment>
	<position x="1058.71" y="1394"/>
	<column name="id" not-null="true" sequence="public.project_expenses_id_seq">
		<type name="integer"/>
	</column>
	<column name="project" not-null="true">
		<type name="integer"/>
	</column>
	<column name="payment_reference" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="amount">
		<type name="money"/>
	</column>
	<column name="payment_type">
		<type name="integer"/>
	</column>
	<column name="organisation">
		<type name="integer"/>
	</column>
	<column name="person">
		<type name="integer"/>
	</column>
	<column name="payment_schedule">
		<type name="integer"/>
	</column>
	<constraint name="project_expenses_pkey" type="pk-constr" table="public.project_expenses">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_milestones_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_milestones">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A project milestone is a record of the milestones of a project.]]></comment>
	<position x="50" y="1593.4"/>
	<column name="id" not-null="true" sequence="public.project_milestones_id_seq">
		<type name="integer"/>
	</column>
	<column name="project" not-null="true">
		<type name="integer"/>
	</column>
	<column name="milestone_type" not-null="true">
		<type name="integer"/>
	</column>
	<column name="milestone_date">
		<type name="date"/>
	</column>
	<constraint name="project_milestones_pkey" type="pk-constr" table="public.project_milestones">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_outputs_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_outputs">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[Project outputs are produced by project activities and may support a KPI]]></comment>
	<position x="325.875" y="1593.4"/>
	<column name="id" not-null="true" sequence="public.project_outputs_id_seq">
		<type name="integer"/>
	</column>
	<column name="project" not-null="true">
		<type name="integer"/>
	</column>
	<column name="key_performance_indicator">
		<type name="integer"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<constraint name="project_outputs_pkey" type="pk-constr" table="public.project_outputs">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_statuses_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_statuses">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[The status of a project.]]></comment>
	<position x="673.875" y="1593.4"/>
	<column name="id" not-null="true" sequence="public.project_statuses_id_seq">
		<type name="integer"/>
	</column>
	<column name="status" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="project_statuses_pkey" type="pk-constr" table="public.project_statuses">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="project_statuses_status_uq" type="uq-constr" table="public.project_statuses">
		<columns names="status" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="project_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="project_types">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A project type is one of Discretionary, Own, etc.]]></comment>
	<position x="1033.95" y="1593.4"/>
	<column name="id" not-null="true" sequence="public.project_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="code" not-null="true">
		<type name="character varying" length="50"/>
	</column>
	<column name="type" not-null="true">
		<type name="character varying" length="255"/>
	</column>
	<column name="description" not-null="true">
		<type name="text"/>
	</column>
	<constraint name="project_types_code_uq" type="uq-constr" table="public.project_types">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="project_types_pkey" type="pk-constr" table="public.project_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="project_types_type_uq" type="uq-constr" table="public.project_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="projects_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="projects">
	<schema name="public"/>
	<role name="postgres"/>
	<comment><![CDATA[A project is a set of activities that may contribute to a KPI, or other objective.]]></comment>
	<position x="1394.03" y="1593.4"/>
	<column name="id" not-null="true" sequence="public.projects_id_seq">
		<type name="integer"/>
	</column>
	<column name="project_code" not-null="true">
		<type name="text"/>
	</column>
	<column name="name" not-null="true">
		<type name="text"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="project_officer" not-null="true">
		<type name="integer"/>
	</column>
	<column name="start_date">
		<type name="date"/>
	</column>
	<column name="end_date">
		<type name="date"/>
	</column>
	<column name="overall_budget">
		<type name="money"/>
	</column>
	<column name="call_application">
		<type name="integer"/>
	</column>
	<column name="key_performance_indicator">
		<type name="integer"/>
	</column>
	<column name="place">
		<type name="integer"/>
	</column>
	<column name="partner">
		<type name="integer"/>
	</column>
	<column name="latest_milestone">
		<type name="integer"/>
	</column>
	<column name="project_type" not-null="true">
		<type name="integer"/>
	</column>
	<column name="project_status" not-null="true">
		<type name="integer"/>
	</column>
	<constraint name="projects_pkey" type="pk-constr" table="public.projects">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="projects_project_code_uq" type="uq-constr" table="public.projects">
		<columns names="project_code" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="question_options_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="question_options">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2232.86" y="653.683"/>
	<column name="id" not-null="true" sequence="public.question_options_id_seq">
		<type name="integer"/>
	</column>
	<column name="option">
		<type name="text"/>
	</column>
	<column name="question">
		<type name="integer"/>
	</column>
	<column name="from_entity" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="entity_name">
		<type name="text"/>
	</column>
	<column name="value_column">
		<type name="text"/>
	</column>
	<column name="display_column">
		<type name="smallint"/>
	</column>
	<column name="value_filter" not-null="true" default-value="*">
		<type name="text"/>
	</column>
	<constraint name="question_options_pk" type="pk-constr" table="public.question_options">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="question_types_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="question_types">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2202.38" y="846.281"/>
	<column name="id" not-null="true" sequence="public.question_types_id_seq">
		<type name="integer"/>
	</column>
	<column name="code">
		<type name="character varying" length="50"/>
	</column>
	<column name="type">
		<type name="character varying" length="255"/>
	</column>
	<column name="angular_control">
		<type name="character varying" length="50"/>
	</column>
	<constraint name="question_types_code_uq" type="uq-constr" table="public.question_types">
		<columns names="code" ref-type="src-columns"/>
	</constraint>
	<constraint name="question_types_pk" type="pk-constr" table="public.question_types">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="question_types_type_uq" type="uq-constr" table="public.question_types">
		<columns names="type" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="questions_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="questions">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1849.83" y="639.917"/>
	<column name="id" not-null="true" sequence="public.questions_id_seq">
		<type name="integer"/>
	</column>
	<column name="question">
		<type name="text"/>
	</column>
	<column name="weight" not-null="true" default-value="0.01">
		<type name="real"/>
	</column>
	<column name="has_options" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="catergory">
		<type name="integer"/>
	</column>
	<column name="type">
		<type name="integer"/>
	</column>
	<column name="lead_question" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="has_motivation" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="is_scoring" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<column name="max_scoring" not-null="true" default-value="0">
		<type name="real"/>
	</column>
	<column name="description">
		<type name="text"/>
	</column>
	<column name="is_grid" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<constraint name="questions_pk" type="pk-constr" table="public.questions">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<index name="organisation_code_ix" table="public.organisations"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="code"/>
		</idxelement>
</index>

<index name="person_id_no_ix" table="public.persons"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="id_no"/>
		</idxelement>
</index>

<index name="place_name_ix" table="public.places"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="name"/>
		</idxelement>
</index>

<index name="province_code_ix" table="public.provinces"
	 concurrent="false" unique="false" fast-update="false" buffering="false"
	 index-type="btree" factor="90">
		<idxelement use-sorting="false">
			<column name="code"/>
		</idxelement>
</index>

<trigger name="encrypt_pass" firing-type="BEFORE" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="basic_auth.users">
		<function signature="basic_auth.encrypt_pass()"/>
</trigger>

<trigger name="ensure_user_role_exists" firing-type="AFTER" per-line="true" constraint="true"
	 ins-event="true" del-event="false" upd-event="true" trunc-event="false"
	 table="basic_auth.users">
		<function signature="basic_auth.check_role_exists()"/>
</trigger>

<trigger name="send_validation" firing-type="AFTER" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="false" trunc-event="false"
	 table="basic_auth.users">
		<function signature="basic_auth.send_validation()"/>
</trigger>

<trigger name="genorgcode" firing-type="BEFORE" per-line="true" constraint="false"
	 ins-event="true" del-event="false" upd-event="false" trunc-event="false"
	 table="public.organisations">
		<function signature="public.genorgcode()"/>
</trigger>

<view name="grid_compliance_applications">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="299.959" y="2656.6"/>
	<reference>
		<expression><![CDATA[ SELECT application_compliance_officers.id,
    application_compliance_officers.application,
    application_compliance_officers.compliance_officer,
    persons.first_names,
    persons.last_name,
    persons.email_address,
    calls.call_reference,
    organisations.name,
    provinces.name AS province,
    application_compliance_officers.lead,
    calls.admin_compliance_template,
    calls.relevance_compliance_template,
    calls.assessment_compliance_template,
    application_compliance_officers.complete,
    application_compliance_officers.compliance_section
   FROM (((((application_compliance_officers
     JOIN call_applications ON ((application_compliance_officers.application = call_applications.id)))
     JOIN organisations ON ((call_applications.applicant = organisations.id)))
     JOIN calls ON ((call_applications.call = calls.id)))
     JOIN persons ON ((application_compliance_officers.compliance_officer = persons.id)))
     LEFT JOIN provinces ON ((organisations.province = provinces.id)));]]></expression>
	</reference>
</view>

<view name="lookup_roles">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="597.528" y="2656.6"/>
	<reference>
		<expression><![CDATA[ SELECT pg_roles.rolname
   FROM pg_roles
  WHERE (pg_roles.rolname <> 'postgres'::name);]]></expression>
	</reference>
</view>

<view name="users">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="843.034" y="2656.6"/>
	<reference>
		<expression><![CDATA[ SELECT actual.role,
    '***'::text AS pass,
    actual.email,
    actual.verified
   FROM basic_auth.users actual,
    ( SELECT pg_authid.rolname
           FROM pg_authid
          WHERE pg_has_role("current_user"(), pg_authid.oid, 'member'::text)) member_of
  WHERE ((actual.role = member_of.rolname) AND ((actual.role <> 'anon'::name) OR (actual.email = basic_auth.current_email())));]]></expression>
	</reference>
</view>

<view name="grid_persons">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1069.92" y="2656.6"/>
	<reference>
		<expression><![CDATA[ SELECT persons.id,
    users.email AS user_login,
    persons.id_no,
    persons.first_names,
    persons.last_name,
    users.role,
    persons.email_address
   FROM (users
     JOIN persons ON ((users.email = (persons.email_address)::text)));]]></expression>
	</reference>
</view>

<sequence name="evaluation_committee_meeting_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="evaluation_committee_meeting">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="898.547" y="1876.8"/>
	<column name="id" not-null="true" sequence="public.evaluation_committee_meeting_id_seq">
		<type name="integer"/>
	</column>
	<column name="meeting_date" not-null="true">
		<type name="timestamp"/>
	</column>
	<column name="name">
		<type name="text"/>
	</column>
	<constraint name="evaluation_committee_meeting_pk" type="pk-constr" table="public.evaluation_committee_meeting">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="evc_has_applications_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="evc_has_applications">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="1209.27" y="1876.8"/>
	<column name="id" not-null="true" sequence="public.evc_has_applications_id_seq">
		<type name="integer"/>
	</column>
	<column name="application">
		<type name="integer"/>
	</column>
	<column name="evc">
		<type name="integer"/>
	</column>
	<column name="decision_narrative">
		<type name="text"/>
	</column>
	<column name="decision_timestamp">
		<type name="timestamp"/>
	</column>
	<column name="amount_approved">
		<type name="money"/>
	</column>
	<column name="approved" not-null="true" default-value="false">
		<type name="boolean"/>
	</column>
	<constraint name="evc_has_applications_pk" type="pk-constr" table="public.evc_has_applications">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
	<constraint name="evc_has_applications_uq" type="uq-constr" table="public.evc_has_applications">
		<columns names="application,evc" ref-type="src-columns"/>
	</constraint>
</table>

<sequence name="evc_attendees_id_seq"
	 start="1" increment="1"
	 min-value="1" max-value="9223372036854775807"
	 cache="1" cycle="false">
	<schema name="public"/>
	<role name="postgres"/>
</sequence>

<table name="evc_attendees">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2104.2"/>
	<column name="id" not-null="true" sequence="public.evc_attendees_id_seq">
		<type name="integer"/>
	</column>
	<column name="attendee">
		<type name="integer"/>
	</column>
	<column name="evc">
		<type name="integer"/>
	</column>
	<constraint name="evc_attendees_pk" type="pk-constr" table="public.evc_attendees">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<view name="reporting_assessment">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="50" y="2744"/>
	<reference>
		<expression><![CDATA[ SELECT compliance_templates.name AS "comName",
    compliance_templates.title AS "comTitle",
    compliance_templates.subtitle AS "comSubTitle",
    categories.name AS "catName",
    categories.title AS "catTitle",
    categories.subtitle AS "catSubTitle",
    questions.question,
    questions.weight,
    questions.has_options,
    questions.catergory,
    questions.type,
    questions.lead_question,
    questions.has_motivation,
    questions.is_scoring,
    questions.max_scoring,
    questions.description,
    compliance_answers.answer,
    compliance_answers.motivation,
    persons.id AS "officerId",
    persons.first_names,
    persons.last_name,
    application_compliance_officers.id AS "appComplianceOfficerId"
   FROM (((((categories
     LEFT JOIN compliance_templates ON ((categories.template = compliance_templates.id)))
     LEFT JOIN questions ON ((questions.catergory = categories.id)))
     LEFT JOIN compliance_answers ON ((compliance_answers.question = questions.id)))
     LEFT JOIN application_compliance_officers ON ((compliance_answers.application_compliance_officer = application_compliance_officers.id)))
     LEFT JOIN persons ON ((application_compliance_officers.compliance_officer = persons.id)));]]></expression>
	</reference>
</view>

<table name="grid_columns">
	<schema name="public"/>
	<role name="postgres"/>
	<position x="2235.45" y="470"/>
	<column name="id" not-null="true">
		<type name="serial"/>
	</column>
	<column name="question">
		<type name="integer"/>
	</column>
	<column name="question_type">
		<type name="integer"/>
	</column>
	<column name="header">
		<type name="text"/>
	</column>
	<constraint name="grid_columns_pk" type="pk-constr" table="public.grid_columns">
		<columns names="id" ref-type="src-columns"/>
	</constraint>
</table>

<constraint name="call_application_statuses_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.call_application_statuses" table="public.call_applications">
	<columns names="application_status" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="calls_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.calls" table="public.call_applications">
	<columns names="call" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisations_fk0" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.call_applications">
	<columns names="applicant" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="places_fk2" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.places" table="public.call_applications">
	<columns names="place" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="key_performance_indicators_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.key_performance_indicators" table="public.calls">
	<columns names="key_performance_indicator" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="assessment_template_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.compliance_templates" table="public.calls">
	<columns names="assessment_compliance_template" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="admin_template_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.compliance_templates" table="public.calls">
	<columns names="admin_compliance_template" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="relevance_template_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.compliance_templates" table="public.calls">
	<columns names="relevance_compliance_template" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="due_diligence_template_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.compliance_templates" table="public.calls">
	<columns names="due_diligence_compliance_template" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="key_result_areas_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.key_result_areas" table="public.key_performance_indicators">
	<columns names="key_result_area" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="programmes_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.programmes" table="public.key_result_areas">
	<columns names="programme" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="auditor_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.organisations">
	<columns names="auditor" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisation_statuses_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisation_statuses" table="public.organisations">
	<columns names="organisation_status" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisation_types_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisation_types" table="public.organisations">
	<columns names="organisation_type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="places_fk1" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.places" table="public.organisations">
	<columns names="place" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="provinces_fk1" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.provinces" table="public.organisations">
	<columns names="province" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="referee_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.organisations">
	<columns names="referee" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="places_fk0" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.places" table="public.suburbs">
	<columns names="place" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="provinces_fk0" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.provinces" table="public.suburbs">
	<columns names="province" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="provinces_fk2" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.provinces" table="public.places">
	<columns names="province" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="tokens_email_fkey" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="basic_auth.users" table="basic_auth.tokens">
	<columns names="email" ref-type="src-columns"/>
	<columns names="email" ref-type="dst-columns"/>
</constraint>

<constraint name="call_applications_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.call_applications" table="public.application_compliance_officers">
	<columns names="application" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="persons_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.persons" table="public.application_compliance_officers">
	<columns names="compliance_officer" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="bank_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.organisations" table="public.bank_accounts">
	<columns names="bank" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="call_applications_fk0" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.call_applications" table="public.call_evaluations">
	<columns names="call_application" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="persons_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.persons" table="public.call_evaluations">
	<columns names="evaluator" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="compliance_templates_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.compliance_templates" table="public.categories">
	<columns names="template" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="application_compliance_officers_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.application_compliance_officers" table="public.compliance_answers">
	<columns names="application_compliance_officer" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="questions_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.questions" table="public.compliance_answers">
	<columns names="question" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_contracts_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.project_contracts" table="public.contract_budget_items">
	<columns names="contract" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_contracts_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.project_contracts" table="public.contract_implementation_plan">
	<columns names="contract" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="job_titles_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.job_titles" table="public.persons">
	<columns names="job_title" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisations_fk1" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.persons">
	<columns names="employer" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="personal_titles_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.personal_titles" table="public.persons">
	<columns names="personal_title" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="key_performance_indicators_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.key_performance_indicators" table="public.key_performance_indicators_targets">
	<columns names="key_performance_indicator" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="bank_accounts_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.bank_accounts" table="public.organisation_bank_accounts">
	<columns names="bankaccount" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisations_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.organisation_bank_accounts">
	<columns names="ogranisation" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_contracts_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.project_contracts" table="public.payment_schedule">
	<columns names="contract" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="bank_accounts_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.bank_accounts" table="public.person_bank_accounts">
	<columns names="person" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="persons_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.persons" table="public.person_bank_accounts">
	<columns names="bankaccount" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="beneficiaries_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.beneficiaries" table="public.project_beneficiaries">
	<columns names="beneficiary" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="projects_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.projects" table="public.project_beneficiaries">
	<columns names="project" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="contract_types_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.contract_types" table="public.project_contracts">
	<columns names="contract_type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="persons_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.persons" table="public.project_contracts">
	<columns names="person" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="projects_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.projects" table="public.project_contracts">
	<columns names="project" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="organisations_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.organisations" table="public.project_expenses">
	<columns names="organisation" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="payment_reference_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.projects" table="public.project_expenses">
	<columns names="project" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="payment_schedule_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.payment_schedule" table="public.project_expenses">
	<columns names="payment_schedule" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="payment_types_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.payment_types" table="public.project_expenses">
	<columns names="payment_type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="persons_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.persons" table="public.project_expenses">
	<columns names="person" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="milestone_type_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.milestone_types" table="public.project_milestones">
	<columns names="milestone_type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_pk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.projects" table="public.project_milestones">
	<columns names="project" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="key_performance_indicator_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.key_performance_indicators" table="public.project_outputs">
	<columns names="key_performance_indicator" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="milestone_of" type="fk-constr" comparison-type="MATCH SIMPLE"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.projects" table="public.project_outputs">
	<columns names="project" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="call_application_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.call_applications" table="public.projects">
	<columns names="call_application" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="key_performance_indicator_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.key_performance_indicators" table="public.projects">
	<columns names="key_performance_indicator" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="latest_milestone_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.project_milestones" table="public.projects">
	<columns names="latest_milestone" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="partner_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.organisations" table="public.projects">
	<columns names="partner" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="place_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.places" table="public.projects">
	<columns names="place" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_status_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.project_statuses" table="public.projects">
	<columns names="project_status" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="project_type_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.project_types" table="public.projects">
	<columns names="project_type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="questions_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.questions" table="public.question_options">
	<columns names="question" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="categories_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.categories" table="public.questions">
	<columns names="catergory" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="question_types_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="SET NULL" ref-table="public.question_types" table="public.questions">
	<columns names="type" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="evc_has_applications_application_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.call_applications" table="public.evc_has_applications">
	<columns names="application" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="evc_has_applications_evc_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.evaluation_committee_meeting" table="public.evc_has_applications">
	<columns names="evc" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="evc_attendees_attendee_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="CASCADE" del-action="CASCADE" ref-table="public.persons" table="public.evc_attendees">
	<columns names="attendee" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="evc_attendees_evc_fk" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.evaluation_committee_meeting" table="public.evc_attendees">
	<columns names="evc" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<constraint name="questions_fk0" type="fk-constr" comparison-type="MATCH FULL"
	 upd-action="NO ACTION" del-action="NO ACTION" ref-table="public.questions" table="public.grid_columns">
	<columns names="question" ref-type="src-columns"/>
	<columns names="id" ref-type="dst-columns"/>
</constraint>

<relationship name="rel_call_applications_call_application_statuses" type="relfk"
	 custom-color="#9554e4"
	 src-table="public.call_applications"
	 dst-table="public.call_application_statuses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_call_applications_calls" type="relfk"
	 custom-color="#3b009b"
	 src-table="public.call_applications"
	 dst-table="public.calls"
	 src-required="false" dst-required="false"/>

<relationship name="rel_call_applications_organisations" type="relfk"
	 custom-color="#156b43"
	 src-table="public.call_applications"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_call_applications_places" type="relfk"
	 custom-color="#c41469"
	 src-table="public.call_applications"
	 dst-table="public.places"
	 src-required="false" dst-required="false"/>

<relationship name="rel_calls_key_performance_indicators" type="relfk"
	 custom-color="#14e79f"
	 src-table="public.calls"
	 dst-table="public.key_performance_indicators"
	 src-required="false" dst-required="false"/>

<relationship name="rel_calls_compliance_templates" type="relfk"
	 custom-color="#0db0fd"
	 src-table="public.calls"
	 dst-table="public.compliance_templates"
	 src-required="false" dst-required="false"/>

<relationship name="rel_key_performance_indicators_key_result_areas" type="relfk"
	 custom-color="#c3e8cc"
	 src-table="public.key_performance_indicators"
	 dst-table="public.key_result_areas"
	 src-required="false" dst-required="false"/>

<relationship name="rel_key_result_areas_programmes" type="relfk"
	 custom-color="#4b3e4c"
	 src-table="public.key_result_areas"
	 dst-table="public.programmes"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisations_organisations" type="relfk"
	 custom-color="#83dce8"
	 src-table="public.organisations"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false">
	<line>
		<position x="415.266" y="428.28"/>
	<position x="415.266" y="268.4"/>
	<position x="287.51" y="268.4"/>
	</line>
</relationship>

<relationship name="rel_organisations_organisation_statuses" type="relfk"
	 custom-color="#143f1b"
	 src-table="public.organisations"
	 dst-table="public.organisation_statuses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisations_organisation_types" type="relfk"
	 custom-color="#603635"
	 src-table="public.organisations"
	 dst-table="public.organisation_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisations_places" type="relfk"
	 custom-color="#c2e6e9"
	 src-table="public.organisations"
	 dst-table="public.places"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisations_provinces" type="relfk"
	 custom-color="#2d691e"
	 src-table="public.organisations"
	 dst-table="public.provinces"
	 src-required="false" dst-required="false"/>

<relationship name="rel_suburbs_places" type="relfk"
	 custom-color="#df2383"
	 src-table="public.suburbs"
	 dst-table="public.places"
	 src-required="false" dst-required="false"/>

<relationship name="rel_suburbs_provinces" type="relfk"
	 custom-color="#c190f0"
	 src-table="public.suburbs"
	 dst-table="public.provinces"
	 src-required="false" dst-required="false"/>

<relationship name="rel_places_provinces" type="relfk"
	 custom-color="#a08399"
	 src-table="public.places"
	 dst-table="public.provinces"
	 src-required="false" dst-required="false"/>

<relationship name="rel_tokens_users" type="relfk"
	 custom-color="#400c69"
	 src-table="basic_auth.tokens"
	 dst-table="basic_auth.users"
	 src-required="false" dst-required="false"/>

<relationship name="rel_application_compliance_officers_call_applications" type="relfk"
	 custom-color="#65a84b"
	 src-table="public.application_compliance_officers"
	 dst-table="public.call_applications"
	 src-required="false" dst-required="false"/>

<relationship name="rel_application_compliance_officers_persons" type="relfk"
	 custom-color="#879ccc"
	 src-table="public.application_compliance_officers"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_bank_accounts_organisations" type="relfk"
	 custom-color="#68ad83"
	 src-table="public.bank_accounts"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_call_evaluations_call_applications" type="relfk"
	 custom-color="#7ade24"
	 src-table="public.call_evaluations"
	 dst-table="public.call_applications"
	 src-required="false" dst-required="false"/>

<relationship name="rel_call_evaluations_persons" type="relfk"
	 custom-color="#0f3837"
	 src-table="public.call_evaluations"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_categories_compliance_templates" type="relfk"
	 custom-color="#235ae4"
	 src-table="public.categories"
	 dst-table="public.compliance_templates"
	 src-required="false" dst-required="false"/>

<relationship name="rel_compliance_answers_application_compliance_officers" type="relfk"
	 custom-color="#f47461"
	 src-table="public.compliance_answers"
	 dst-table="public.application_compliance_officers"
	 src-required="false" dst-required="false"/>

<relationship name="rel_compliance_answers_questions" type="relfk"
	 custom-color="#555d6a"
	 src-table="public.compliance_answers"
	 dst-table="public.questions"
	 src-required="false" dst-required="false"/>

<relationship name="rel_contract_budget_items_project_contracts" type="relfk"
	 custom-color="#e75405"
	 src-table="public.contract_budget_items"
	 dst-table="public.project_contracts"
	 src-required="false" dst-required="false"/>

<relationship name="rel_contract_implementation_plan_project_contracts" type="relfk"
	 custom-color="#9f41cf"
	 src-table="public.contract_implementation_plan"
	 dst-table="public.project_contracts"
	 src-required="false" dst-required="false"/>

<relationship name="rel_persons_job_titles" type="relfk"
	 custom-color="#bafb8c"
	 src-table="public.persons"
	 dst-table="public.job_titles"
	 src-required="false" dst-required="false"/>

<relationship name="rel_persons_organisations" type="relfk"
	 custom-color="#25f4b1"
	 src-table="public.persons"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_persons_personal_titles" type="relfk"
	 custom-color="#e86623"
	 src-table="public.persons"
	 dst-table="public.personal_titles"
	 src-required="false" dst-required="false"/>

<relationship name="rel_key_performance_indicators_targets_key_performance_indicato" type="relfk"
	 custom-color="#ff6a9e"
	 src-table="public.key_performance_indicators_targets"
	 dst-table="public.key_performance_indicators"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisation_bank_accounts_bank_accounts" type="relfk"
	 custom-color="#38e21c"
	 src-table="public.organisation_bank_accounts"
	 dst-table="public.bank_accounts"
	 src-required="false" dst-required="false"/>

<relationship name="rel_organisation_bank_accounts_organisations" type="relfk"
	 custom-color="#da62a0"
	 src-table="public.organisation_bank_accounts"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_payment_schedule_project_contracts" type="relfk"
	 custom-color="#968aa2"
	 src-table="public.payment_schedule"
	 dst-table="public.project_contracts"
	 src-required="false" dst-required="false"/>

<relationship name="rel_person_bank_accounts_bank_accounts" type="relfk"
	 custom-color="#29431c"
	 src-table="public.person_bank_accounts"
	 dst-table="public.bank_accounts"
	 src-required="false" dst-required="false"/>

<relationship name="rel_person_bank_accounts_persons" type="relfk"
	 custom-color="#b05205"
	 src-table="public.person_bank_accounts"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_beneficiaries_beneficiaries" type="relfk"
	 custom-color="#6f32d8"
	 src-table="public.project_beneficiaries"
	 dst-table="public.beneficiaries"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_beneficiaries_projects" type="relfk"
	 custom-color="#4dbc54"
	 src-table="public.project_beneficiaries"
	 dst-table="public.projects"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_contracts_contract_types" type="relfk"
	 custom-color="#639e4f"
	 src-table="public.project_contracts"
	 dst-table="public.contract_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_contracts_persons" type="relfk"
	 custom-color="#021c5d"
	 src-table="public.project_contracts"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_contracts_projects" type="relfk"
	 custom-color="#65c092"
	 src-table="public.project_contracts"
	 dst-table="public.projects"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_expenses_organisations" type="relfk"
	 custom-color="#bca235"
	 src-table="public.project_expenses"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_expenses_projects" type="relfk"
	 custom-color="#51cb0f"
	 src-table="public.project_expenses"
	 dst-table="public.projects"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_expenses_payment_schedule" type="relfk"
	 custom-color="#748d88"
	 src-table="public.project_expenses"
	 dst-table="public.payment_schedule"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_expenses_payment_types" type="relfk"
	 custom-color="#627acd"
	 src-table="public.project_expenses"
	 dst-table="public.payment_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_expenses_persons" type="relfk"
	 custom-color="#461bb9"
	 src-table="public.project_expenses"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_milestones_milestone_types" type="relfk"
	 custom-color="#221272"
	 src-table="public.project_milestones"
	 dst-table="public.milestone_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_milestones_projects" type="relfk"
	 custom-color="#da100c"
	 src-table="public.project_milestones"
	 dst-table="public.projects"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_outputs_key_performance_indicators" type="relfk"
	 custom-color="#7898e8"
	 src-table="public.project_outputs"
	 dst-table="public.key_performance_indicators"
	 src-required="false" dst-required="false"/>

<relationship name="rel_project_outputs_projects" type="relfk"
	 custom-color="#3d8591"
	 src-table="public.project_outputs"
	 dst-table="public.projects"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_call_applications" type="relfk"
	 custom-color="#3f94eb"
	 src-table="public.projects"
	 dst-table="public.call_applications"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_key_performance_indicators" type="relfk"
	 custom-color="#1cabad"
	 src-table="public.projects"
	 dst-table="public.key_performance_indicators"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_organisations" type="relfk"
	 custom-color="#edf5d6"
	 src-table="public.projects"
	 dst-table="public.organisations"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_places" type="relfk"
	 custom-color="#585aa5"
	 src-table="public.projects"
	 dst-table="public.places"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_project_statuses" type="relfk"
	 custom-color="#e726ad"
	 src-table="public.projects"
	 dst-table="public.project_statuses"
	 src-required="false" dst-required="false"/>

<relationship name="rel_projects_project_types" type="relfk"
	 custom-color="#4daa2d"
	 src-table="public.projects"
	 dst-table="public.project_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_question_options_questions" type="relfk"
	 custom-color="#888d8a"
	 src-table="public.question_options"
	 dst-table="public.questions"
	 src-required="false" dst-required="false"/>

<relationship name="rel_questions_categories" type="relfk"
	 custom-color="#c6b275"
	 src-table="public.questions"
	 dst-table="public.categories"
	 src-required="false" dst-required="false"/>

<relationship name="rel_questions_question_types" type="relfk"
	 custom-color="#60068a"
	 src-table="public.questions"
	 dst-table="public.question_types"
	 src-required="false" dst-required="false"/>

<relationship name="rel_evc_has_applications_call_applications" type="relfk"
	 custom-color="#41bb6b"
	 src-table="public.evc_has_applications"
	 dst-table="public.call_applications"
	 src-required="false" dst-required="false"/>

<relationship name="rel_evc_has_applications_evaluation_committee_meeting" type="relfk"
	 custom-color="#4725e7"
	 src-table="public.evc_has_applications"
	 dst-table="public.evaluation_committee_meeting"
	 src-required="false" dst-required="false"/>

<relationship name="rel_evc_attendees_persons" type="relfk"
	 custom-color="#94884b"
	 src-table="public.evc_attendees"
	 dst-table="public.persons"
	 src-required="false" dst-required="false"/>

<relationship name="rel_evc_attendees_evaluation_committee_meeting" type="relfk"
	 custom-color="#7bcaa3"
	 src-table="public.evc_attendees"
	 dst-table="public.evaluation_committee_meeting"
	 src-required="false" dst-required="false"/>

<relationship name="rel_grid_columns_questions" type="relfk"
	 src-table="public.grid_columns"
	 dst-table="public.questions"
	 src-required="false" dst-required="false"/>

<permission>
	<object name="basic_auth" type="schema"/>
	<roles names="postgres"/>
	<privileges create="true" usage="true"/>
</permission>
</dbmodel>
